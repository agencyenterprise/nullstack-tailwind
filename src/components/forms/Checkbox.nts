import Nullstack from "nullstack";

interface CheckboxProps {
  name: string;
  source: string;
  label: string;
  onclick?: () => void;
  description?: string;
  class?: string;
  id?: string;
  disabled?: boolean;
}

class Checkbox extends Nullstack {
  toggle({ onclick, source, name }) {
    source[name] = !source[name];
    onclick && onclick(source[name]);
  }

  render(props: CheckboxProps) {
    const {
      label,
      description,
      name,
      source,
      disabled,
      id,
      class: klass,
    } = props;
    const checked = source[name];

    return (
      <div class="relative flex items-start">
        <div class="flex items-center h-5">
          <input
            id={id}
            aria-describedby={id}
            type="checkbox"
            class={"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded".concat(
              klass ? ` ${klass}` : ""
            )}
            checked={checked}
            disabled={disabled}
            onclick={!disabled && this.toggle}
          />
        </div>
        <div class="ml-3 text-sm">
          <label for="comments" class="font-medium text-gray-700">
            {label}
          </label>
          {description && (
            <p id={id} class="text-gray-500">
              {description}
            </p>
          )}
        </div>
      </div>
    );
  }
}

export default Checkbox;
